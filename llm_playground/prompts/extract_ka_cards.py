"""
# KA 法におけるカード生成

- [ユーザーインタビューからその後どうするの？ 発話録からKA法（本質的価値抽出法）でインサイトを見つけよう！](https://www.slideshare.net/storywriterjp/ka-256785136)
- [KA法（本質的価値抽出法）の手順と実例「資格試験を受ける人のモチベーションの価値マップ」](https://www.figma.com/community/file/1142124393231568930/ka)
"""

from langchain.prompts import PromptTemplate

template = """
あなたは経験豊富な UX リサーチャーです。
あなたは現在「{goal}」という仕事に取り組んでおり、ユーザー理解のためにインタビューを実施しました。
このインタビューのリサーチクエスチョンは、「{research_question}」です。

#タスク
[#インタビュー記録] の [## インタビュー 発話録] から、KA 法の作法に従ってカードを作成してください。
具体的な作業方法は [#作業ルール] と [#サンプル] に従ってください。

# 作業ルール
1 枚のカードは、以下の 3 つの手順に従って作成します。

1. 「出来事」の抽出

ユーザーの発話から、ユーザーの行動・気持ち・疑問などが現れている部分を「出来事」として抜き出してください。
「出来事」を書く際に守るべきことは以下です。

- 元の文章を変更せず、そのまま引用するようにしてください。
- 動詞が含まれている文章の形で引用してください。
- 1 つの KA カードには 1 つの出来事を記入してください。一つの発話に複数の心理が含まれている場合、複数の「出来事」に分けてください。
- モデレーターの発言は「出来事」に含めてはいけません。

2. 「心の声」の解釈

「出来事」を元に回答者の心理を解釈し「心の声」に記入してください。
「心の声」を書く際に守るべきことは以下です。

- 「出来事」から心理が解釈しづらい場合は、前後の文脈を考慮して推測してください。
- 「心の声」は「歯に衣着せず、ズバズバ本音をいう」ペルソナになりきって書いてみてください。曖昧な表現は避けてください。
- 複数の心の声が思いつく場合は、これもカードを複製して分けて書いてください。

3. 「価値」の解釈

「心の声」からユーザーが何を期待していたかを解釈し、「価値」に記入してください。
「価値」を書く際に守るべきことは以下です。

- 語尾は必ず「価値」にしてください。
- 文中には動詞を含めてください。
- 満たされなかった出来事は「本当は何が満たされてほしかったのか」という反転した視点で記載してください。

#サンプル
発話録の例：
```
Aさん：洋画を観て、まず洋画聞けるようになりたいなっていうのと、
あとは最終目標はやっぱりTOEFLとか、しっかり話せる状態を作りたいなとは思ったんですけど、
何もこれまでの実績がないと、TOEIC何点とかがないような状態でそこを目指すのは、
ちょっといきなりモチベーション的に持たないんじゃないかと思い、
```

カードの例：
```
- 出来事：洋画を観て、まず洋画聞けるようになりたい
- 心の声：洋画を観たときに英語を聞き取れたらいいなあ
- 価値：高いスキルを身につけた生活に憧れる価値

- 出来事：最終目標はやっぱりTOEFLとか、しっかり話せる状態を作りたい
- 心の声：ちゃんと英語がしゃべれるようになりたいな
- 価値：ちゃんと実用になるスキルを身につけたいと思う価値

- 出来事：何もこれまでの実績がないと、TOEIC何点とかがないような状態でそこを目指すのは、ちょっといきなりモチベーション的に持たない
- 心の声：いきなり高難易度の資格はモチベーションが保たないよ
- 価値：高難易度の資格にチャレンジできる積み上げがある価値
```

#出力形式
[#サンプル] の [カード例] のような形式で出力してください。

#インタビュー記録
以下はインタビュー調査の逐語録を含めた markdown 形式のデータです。

```markdown
{input_data}
```
"""

with open("data/thinkit-hayama-ux-user-interview-a.md", "r", encoding="utf-8") as f:
    input_data = f.read()

partial_variables = {
    "input_data": input_data,
    "goal": "TOEIC の資格取得をサポートするスマホアプリを改善する",
    "research_question": "資格をとろうと思うきっかけの心理",
}

prompt_template = PromptTemplate.from_template(
    template=template,
    partial_variables=partial_variables,
)

prompt = prompt_template.format()
